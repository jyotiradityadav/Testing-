def merge_sort(arr):
    if len(arr) > 1:
        mid = len(arr) // 2
        left_half = arr[:mid]
        right_half = arr[mid:]

        merge_sort(left_half)
        merge_sort(right_half)

        i = 0
        j = 0
        k = 0

        while i < len(left_half) and j < len(right_half):
            if left_half[i] < right_half[j]:
                arr[k] = left_half[i]
                i += 1
            else:
                arr[k] = right_half[j]
                j += 1
            k += 1

        while i < len(left_half):
            arr[k] = left_half[i]
            i += 1
            k += 1

        while j < len(right_half):
            arr[k] = right_half[j]
            j += 1
            k += 1

if __name__ == "__main__":
    test_cases = [
        [],
        [1],
        [5, 3, 8, 4, 2],
        [5, 3, 8, 4, 2, 8, 3],
        [-1, -3, 0, 5, 2],
    ]

    for i, test_case in enumerate(test_cases, 1):
        original = test_case.copy()
        merge_sort(test_case)
        print(f"Test case {i}: Original: {original} Sorted: {test_case}")