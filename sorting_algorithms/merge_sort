def merge_sort(arr):
    """
    Sorts an array using the merge sort algorithm.
    
    Args:
        arr: List of comparable elements to be sorted
        
    Returns:
        List: A new sorted list containing all elements from the input array
    """
    if len(arr) <= 1:
        return arr
    
    # Divide the array into two halves
    mid = len(arr) // 2
    left_half = arr[:mid]
    right_half = arr[mid:]
    
    # Recursively sort both halves
    left_sorted = merge_sort(left_half)
    right_sorted = merge_sort(right_half)
    
    # Merge the sorted halves
    return merge(left_sorted, right_sorted)


def merge(left, right):
    """
    Merges two sorted arrays into a single sorted array.
    
    Args:
        left: First sorted array
        right: Second sorted array
        
    Returns:
        List: Merged sorted array containing all elements from both input arrays
    """
    result = []
    left_idx = 0
    right_idx = 0
    
    # Compare elements from both arrays and add the smaller one to result
    while left_idx < len(left) and right_idx < len(right):
        if left[left_idx] <= right[right_idx]:
            result.append(left[left_idx])
            left_idx += 1
        else:
            result.append(right[right_idx])
            right_idx += 1
    
    # Add remaining elements from left array
    while left_idx < len(left):
        result.append(left[left_idx])
        left_idx += 1
    
    # Add remaining elements from right array
    while right_idx < len(right):
        result.append(right[right_idx])
        right_idx += 1
    
    return result


# Test cases
if __name__ == "__main__":
    # Test empty array
    assert merge_sort([]) == []
    
    # Test single element
    assert merge_sort([1]) == [1]
    
    # Test already sorted array
    assert merge_sort([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]
    
    # Test reverse sorted array
    assert merge_sort([5, 4, 3, 2, 1]) == [1, 2, 3, 4, 5]
    
    # Test array with duplicates
    assert merge_sort([3, 1, 4, 1, 5, 9, 2, 6, 5]) == [1, 1, 2, 3, 4, 5, 5, 6, 9]
    
    # Test array with negative numbers
    assert merge_sort([-3, -1, -4, 0, 2]) == [-4, -3, -1, 0, 2]
    
    # Test array with mixed positive and negative numbers
    assert merge_sort([3, -1, 4, -2, 0]) == [-2, -1, 0, 3, 4]
    
    print("All tests passed!")